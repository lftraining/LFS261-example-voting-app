pipeline {
  agent {
    docker {
      image 'maven:3.6.1-jdk-8-slim'
      args '-v \$HOME/.m2:/root/.m2'
    }
  }
  stages {
    stage('build') {
      steps {
        echo 'building worker app'
        dir('worker') {
          sh 'mvn compile'
        }
      }
    }
    stage('test') {
      steps {
        echo 'running unit tests on worker app'
        dir('worker') {
          sh 'mvn clean test'
        }
      }
    }
    stage('package') {
      steps {
        echo 'packaging worker app into a jar file'
        dir('worker') {
          sh 'mvn package -DskipTests'
          archiveArtifacts artifacts: '**/target/*.jar',

            fingerprint: true
        }
      }
    }
    stage('docker-package') {
      agent any
      steps {
        echo 'Packaging worker app with docker'
        script {
          docker.withRegistry('https://index.docker.io/v1/',

            'dockerlogin') {

             def workerImage = docker.build("petarda/worker:v${env.BUILD_ID}", ". / worker ")

              workerImage.push() workerImage.push("latest")
            }
          }
        }
      }
    }
    post {
      always {
        echo 'the job is complete'
      }
    }
  }
